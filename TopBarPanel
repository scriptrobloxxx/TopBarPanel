-- Accès à CoreGui et RunService
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")  -- Pour la vérification périodique

-- Fonction pour ajuster la taille de menuSection en fonction du nombre d'enfants dans panelContainer
local function updateMenuSectionSize(panelContainer, menuSection)
    if not panelContainer or not menuSection then return end  -- Vérification des instances

    -- Calculer le nombre total d'enfants dans panelContainer
    local numberOfChildren = #panelContainer:GetChildren()
    -- Calculer la largeur en fonction du nombre d'enfants
    local correctWidth = numberOfChildren * 44
    -- Vérifier si la taille est déjà correcte avant de la changer
    if menuSection.Size.X.Offset ~= correctWidth then
        menuSection.Size = UDim2.new(0, correctWidth, 0, 44)
    end
end

-- Fonction pour surveiller périodiquement la taille de menuSection
local function monitorMenuSectionSize(panelContainer, menuSection)
    -- Boucle périodique pour vérifier la taille toutes les 0,1 secondes
    RunService.Heartbeat:Connect(function()
        if not panelContainer or not menuSection then
            return  -- Arrêter la vérification si les instances n'existent plus
        end
        updateMenuSectionSize(panelContainer, menuSection)
    end)
end

-- Fonction pour créer le bouton et gérer les interactions
local function createButton()
    -- Naviguer dans la hiérarchie jusqu'à 'CoreGui.TopBarApp.UnibarLeftFrame.UnibarMenu.2.3'
    local topBarApp = CoreGui:FindFirstChild("TopBarApp", true)
    if not topBarApp then
        warn("TopBarApp introuvable dans CoreGui.")
        return
    end

    local unibarLeftFrame = topBarApp:FindFirstChild("UnibarLeftFrame", true)
    if not unibarLeftFrame then
        warn("UnibarLeftFrame introuvable.")
        return
    end

    local unibarMenu = unibarLeftFrame:FindFirstChild("UnibarMenu", true)
    if not unibarMenu then
        warn("UnibarMenu introuvable.")
        return
    end

    local menuSection = unibarMenu:FindFirstChild("2", true)
    if not menuSection then
        warn("Section '2' introuvable dans UnibarMenu.")
        return
    end

    local panelContainer = menuSection:FindFirstChild("3", true)
    if not panelContainer then
        warn("Section '3' introuvable dans Section '2'.")
        return
    end

    -- Création du bouton "Panel"
    local button = Instance.new("TextButton")
    button.Name = "Panel"
    button.Position = UDim2.new(0, #panelContainer:GetChildren() * 44, 0, 0)  -- Position calculée
    button.Size = UDim2.new(0, 44, 0, 44)
    button.Selectable = true
    button.Text = ""  -- Texte vide
    button.Visible = true
    button.BackgroundTransparency = 1  -- Pas de fond par défaut
    button.Parent = panelContainer

    -- Initialiser la propriété Selected pour garantir qu'un état existe dès le départ
    button.Selected = false

    -- Création de l'élément "Highlight" dans le bouton
    local highlight = Instance.new("Frame")
    highlight.Name = "Highlight"
    highlight.BackgroundColor3 = Color3.fromRGB(163, 162, 165)
    highlight.BorderColor3 = Color3.fromRGB(27, 42, 53)
    highlight.Size = UDim2.new(0, 36, 0, 36)  -- Taille de 36x36
    highlight.Position = UDim2.new(0.5, 0, 0.5, 0)  -- Centré par rapport au bouton
    highlight.BackgroundTransparency = 0.9  -- Fond presque transparent
    highlight.AnchorPoint = Vector2.new(0.5, 0.5)  -- Centrer le Highlight
    highlight.Visible = false  -- Highlight invisible par défaut
    highlight.Parent = button

    -- Ajouter un coin arrondi (UICorner) dans le Highlight pour avoir un coin rond parfait
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0.5, 0)  -- Coin arrondi totalement rond
    uiCorner.Parent = highlight

    -- Création de l'élément "Icon" dans le bouton
    local icon = Instance.new("ImageLabel")
    icon.Name = "Icon"
    icon.Image = "rbxassetid://18111019114"  -- Image fournie
    icon.Size = UDim2.new(0, 22, 0, 22)  -- Taille de l'icône spécifiée
    icon.Position = UDim2.new(0.5, -11, 0.5, -11)  -- Centrer l'icône (calculé pour être centré)
    icon.BackgroundTransparency = 1  -- Fond transparent
    icon.Visible = true  -- L'icône est visible
    icon.Parent = button

    -- Afficher le Highlight au survol de la souris
    button.MouseEnter:Connect(function()
        highlight.Visible = true  -- Le highlight devient visible
    end)

    button.MouseLeave:Connect(function()
        highlight.Visible = false  -- Le highlight disparaît quand la souris sort
    end)

    -- Lorsque le bouton est cliqué, changer la couleur de l'icône
    button.MouseButton1Click:Connect(function()
        if button.Selected then
            icon.ImageColor3 = Color3.fromRGB(255, 255, 0)  -- Couleur jaune quand activé
        else
            icon.ImageColor3 = Color3.fromRGB(255, 255, 255)  -- Couleur blanche quand désactivé
        end
        -- Basculer l'état de sélection du bouton
        button.Selected = not button.Selected
    end)

    -- Appeler updateMenuSectionSize pour ajuster la taille après avoir ajouté le bouton
    updateMenuSectionSize(panelContainer, menuSection)

    -- Surveiller la taille de menuSection de manière continue
    monitorMenuSectionSize(panelContainer, menuSection)
end

-- Fonction pour supprimer le bouton spécifique
local function deleteButton()
    local topBarApp = CoreGui:FindFirstChild("TopBarApp", true)
    if topBarApp then
        local unibarLeftFrame = topBarApp:FindFirstChild("UnibarLeftFrame", true)
        if unibarLeftFrame then
            local stackedElements = unibarLeftFrame:FindFirstChild("StackedElements", true)
            if stackedElements then
                local button = stackedElements:FindFirstChild("Button", true)
                if button then
                    button:Destroy()  -- Supprimer le bouton
                end
            end
        end
    end
end

-- Exécuter les fonctions de création et de suppression
createButton()
deleteButton()
